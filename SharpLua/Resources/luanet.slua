local metatable = {}
local rawget = rawget
local import_type = luanet.import_type
local load_assembly = luanet.load_assembly
luanet.error, luanet.type = error, type
-- Lookup a .NET identifier component.
function metatable:__index(key) -- key is e.g. 'Form'
    -- Get the fully-qualified name, e.g. 'System.Windows.Forms.Form'
    local fqn = rawget(self,'.fqn')
    fqn = ((fqn and fqn .. '.') or '') .. key

    -- Try to find either a luanet function or a CLR type
    local obj = rawget(luanet,key) or import_type(fqn)

    -- If key is neither a luanet function or a CLR type, then it is simply
    -- an identifier component.
    if obj == nil then
        -- It might be an assembly, so we load it too.
        pcall(load_assembly,fqn)
        obj = { ['.fqn'] = fqn }
        setmetatable(obj, metatable)
    end

    -- Cache this lookup
    rawset(self, key, obj)
    return obj
end

-- A non-type has been called; e.g. foo = System.Foo()
function metatable:__call(...)
    error('No such type: ' .. rawget(self,'.fqn'), 2)
end

-- This is the root of the .NET namespace
luanet['.fqn'] = false
setmetatable(luanet, metatable)

-- Preload the mscorlib assembly
luanet.load_assembly('mscorlib')
